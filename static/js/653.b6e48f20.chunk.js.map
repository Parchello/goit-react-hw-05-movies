{"version":3,"file":"static/js/653.b6e48f20.chunk.js","mappings":"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","sources":["components/SelectedMovie/SelectedMovie.styled.js","components/SelectedMovie/SelectedMovie.js","pages/MovieDetailPage.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SpinnerContainer = styled.div`\n  display: 'flex';\n  justify-content: 'center';\n  align-items: 'center';\n  height: '100vh';\n`;\n\nexport const SelectedMovieContainer = styled.div`\n  display: flex;\n  margin-left: 40px;\n  margin-right: 40px;\n`;\n\nexport const SelectedMovieDescrContainer = styled.div`\n  margin-top: 100px;\n  margin-left: 50px;\n`;\n\nexport const SelectedMovieLinkList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: navy;\n\n  &:hover {\n    color: orange;\n  }\n  &.active {\n    color: orange;\n  }\n`;\n","import { Suspense, useRef } from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { Outlet, useLocation, Link as ButtonLink } from 'react-router-dom';\nimport {\n  SpinnerContainer,\n  SelectedMovieContainer,\n  SelectedMovieDescrContainer,\n  SelectedMovieLinkList,\n  StyledNavLink,\n} from './SelectedMovie.styled';\nimport { Button } from '@mui/material';\n\nexport default function SelectedMovie({ movie, genres }) {\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n  const imgUrl = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <div>\n      {movie ? (\n        <SelectedMovieContainer>\n          <div>\n            <div>\n              <Button\n                component={ButtonLink}\n                to={backLinkLocation.current}\n                variant=\"outlined\"\n                style={{\n                  marginTop: '10px',\n                  color: 'black',\n                  borderColor: 'black',\n                }}\n              >\n                Go back\n              </Button>\n            </div>\n            <h1>{movie.title}</h1>\n            <img\n              src={\n                movie.poster_path\n                  ? imgUrl + movie.poster_path\n                  : 'https://www.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg'\n              }\n              alt={movie.title}\n              width={300}\n              height={450}\n            />\n          </div>\n          <SelectedMovieDescrContainer>\n            <h2>Overview</h2>\n            <p>Relase date: {movie.release_date}</p>\n            <p>User score: {movie.vote_average}/10</p>\n\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>\n                  <p>{genre.name}</p>\n                </li>\n              ))}\n            </ul>\n          </SelectedMovieDescrContainer>\n        </SelectedMovieContainer>\n      ) : (\n        <SpinnerContainer>\n          <ProgressBar\n            height=\"400\"\n            width=\"400\"\n            ariaLabel=\"progress-bar-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"progress-bar-wrapper\"\n            borderColor=\"grey\"\n            barColor=\"orange\"\n          />\n        </SpinnerContainer>\n      )}\n      <SelectedMovieLinkList>\n        <li>\n          <StyledNavLink to=\"casts\">Cast</StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n        </li>\n      </SelectedMovieLinkList>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import { fetchOneMovie } from 'api';\nimport SelectedMovie from 'components/SelectedMovie/SelectedMovie';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function MovieDetailPage() {\n  const [selecteMovie, setselecteMovie] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const result = async () => {\n      try {\n        const movie = await fetchOneMovie(movieId);\n        if (movie !== undefined) {\n          setselecteMovie(movie);\n          setGenres(movie.genres);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    result();\n  }, [movieId]);\n\n  return (\n    <div>\n      <SelectedMovie movie={selecteMovie} genres={genres} />\n    </div>\n  );\n}\n"],"names":["SpinnerContainer","styled","_templateObject","_taggedTemplateLiteral","SelectedMovieContainer","_templateObject2","SelectedMovieDescrContainer","_templateObject3","SelectedMovieLinkList","_templateObject4","StyledNavLink","NavLink","_templateObject5","SelectedMovie","_ref","_location$state$from","_location$state","movie","genres","location","useLocation","backLinkLocation","useRef","state","from","_jsxs","children","_jsx","Button","component","ButtonLink","to","current","variant","style","marginTop","color","borderColor","title","src","poster_path","alt","width","height","release_date","vote_average","overview","map","genre","name","id","ProgressBar","ariaLabel","wrapperStyle","wrapperClass","barColor","Suspense","fallback","Outlet","MovieDetailPage","_useState","useState","_useState2","_slicedToArray","selecteMovie","setselecteMovie","_useState3","_useState4","setGenres","movieId","useParams","useEffect","result","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchOneMovie","undefined","sent","t0","console","log","stop","apply","arguments"],"sourceRoot":""}